import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Calendar } from '@/components/ui/calendar';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Calendar as CalendarIcon, Users, Clock, CheckCircle, Activity, Search } from 'lucide-react';
import CoachAttendanceCard from '@/components/CoachAttendanceCard';
import StudentAttendanceManager from '@/components/StudentAttendanceManager';
import ActivityUpdateCard from '@/components/ActivityUpdateCard';
import { Input } from '@/components/ui/input';
import DashboardLayout from '@/components/layouts/DashboardLayout';

// Mock data
const upcomingClasses = [
  { id: 1, title: 'Beginners Soccer', time: '9:00 AM - 10:30 AM', students: 12, location: 'Field A' },
  { id: 2, title: 'Advanced Basketball', time: '11:00 AM - 12:30 PM', students: 8, location: 'Court 2' },
  { id: 3, title: 'Intermediate Tennis', time: '2:00 PM - 3:30 PM', students: 6, location: 'Tennis Court B' }
];

const students = [
  { id: 1, name: 'John Smith', age: 12, sport: 'Soccer', attendance: '90%', nextClass: 'Today' },
  { id: 2, name: 'Sarah Johnson', age: 10, sport: 'Basketball', attendance: '85%', nextClass: 'Tomorrow' },
  { id: 3, name: 'David Wilson', age: 13, sport: 'Tennis', attendance: '78%', nextClass: 'Today' },
  { id: 4, name: 'Emma Brown', age: 11, sport: 'Soccer', attendance: '92%', nextClass: 'Today' },
  { id: 5, name: 'Michael Chen', age: 14, sport: 'Basketball', attendance: '88%', nextClass: 'Tomorrow' },
  { id: 6, name: 'Lisa Garcia', age: 9, sport: 'Tennis', attendance: '80%', nextClass: 'Today' }
];

const CoachDashboard = () => {
  const [selectedDate, setSelectedDate] = useState<Date | undefined>(new Date());
  const [searchQuery, setSearchQuery] = useState('');

  return (
    <DashboardLayout
      title="Coach Dashboard"
      userType="coach"
      currentPath="/coach/dashboard"
    >
      <div className="space-y-6">
        {/* Top Cards */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <Card className="overflow-hidden border-none shadow-md hover:shadow-lg transition-all">
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm font-medium text-gray-500">My Students</p>
                  <div className="text-2xl font-bold">{students.length}</div>
                  <div className="flex items-center text-xs text-green-600 mt-1">
                    <CheckCircle className="h-3 w-3 mr-1" />
                    2 new assignments
                  </div>
                </div>
                <div className="rounded-full p-3 bg-blue-100">
                  <Users className="h-6 w-6 text-blue-600" />
                </div>
              </div>
            </CardContent>
          </Card>

          <Card className="overflow-hidden border-none shadow-md hover:shadow-lg transition-all">
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm font-medium text-gray-500">Today's Classes</p>
                  <div className="text-2xl font-bold">{upcomingClasses.length}</div>
                  <div className="flex items-center text-xs text-green-600 mt-1">
                    <Clock className="h-3 w-3 mr-1" />
                    Next in 30 minutes
                  </div>
                </div>
                <div className="rounded-full p-3 bg-green-100">
                  <CalendarIcon className="h-6 w-6 text-green-600" />
                </div>
              </div>
            </CardContent>
          </Card>

          <Card className="overflow-hidden border-none shadow-md hover:shadow-lg transition-all">
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm font-medium text-gray-500">Weekly Activities</p>
                  <div className="text-2xl font-bold">12</div>
                  <div className="flex items-center text-xs text-green-600 mt-1">
                    <Activity className="h-3 w-3 mr-1" />
                    3 pending reports
                  </div>
                </div>
                <div className="rounded-full p-3 bg-amber-100">
                  <Activity className="h-6 w-6 text-amber-600" />
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Dashboard Tabs */}
        <Tabs defaultValue="overview" className="space-y-4">
          <TabsList className="grid grid-cols-1 sm:grid-cols-4 max-w-xl">
            <TabsTrigger value="overview">Overview</TabsTrigger>
            <TabsTrigger value="attendance">Attendance</TabsTrigger>
            <TabsTrigger value="students">Students</TabsTrigger>
            <TabsTrigger value="reports">Reports</TabsTrigger>
          </TabsList>

          {/* Overview Tab */}
          <TabsContent value="overview" className="space-y-4">
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div className="col-span-2">
                <Card>
                  <CardHeader>
                    <CardTitle>Upcoming Classes</CardTitle>
                    <CardDescription>Your schedule for today</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      {upcomingClasses.map(cls => (
                        <div key={cls.id} className="flex justify-between items-center p-3 border rounded-lg hover:bg-gray-50">
                          <div>
                            <h4 className="font-semibold">{cls.title}</h4>
                            <div className="flex items-center gap-2 mt-1 text-sm text-gray-500">
                              <Clock className="h-3 w-3" />
                              {cls.time}
                            </div>
                            <div className="flex items-center gap-2 mt-1 text-xs text-gray-500">
                              <Users className="h-3 w-3" />
                              {cls.students} students
                            </div>
                          </div>
                          <Badge variant="outline">{cls.location}</Badge>
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>
              </div>

              <Card>
                <CardHeader>
                  <CardTitle>Calendar</CardTitle>
                  <CardDescription>View scheduled classes</CardDescription>
                </CardHeader>
                <CardContent className="pt-0">
                  <Calendar
                    mode="single"
                    selected={selectedDate}
                    onSelect={setSelectedDate}
                    className="border rounded-md p-3"
                  />
                </CardContent>
              </Card>
            </div>

            <ActivityUpdateCard />
          </TabsContent>

          {/* Attendance Tab */}
          <TabsContent value="attendance" className="space-y-4">
            <CoachAttendanceCard />
            <StudentAttendanceManager />
          </TabsContent>
          
          {/* Students Tab */}
          <TabsContent value="students" className="space-y-4">
            <div className="flex gap-4 mb-4">
              <div className="relative flex-1">
                <Search className="h-4 w-4 absolute left-3 top-3 text-gray-400" />
                <Input 
                  placeholder="Search students..." 
                  className="pl-9"
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                />
              </div>
              <Button className="bg-blue-600 hover:bg-blue-700">
                <Users className="h-4 w-4 mr-2" />
                View All
              </Button>
            </div>
            
            <Card>
              <CardHeader>
                <CardTitle>My Students</CardTitle>
                <CardDescription>Students assigned to your classes</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="rounded-md border">
                  <div className="grid grid-cols-5 font-medium p-3 bg-muted text-xs md:text-sm">
                    <div>Name</div>
                    <div>Age</div>
                    <div>Sport</div>
                    <div>Attendance</div>
                    <div className="text-right">Next Class</div>
                  </div>
                  <div className="divide-y">
                    {students
                      .filter(student => searchQuery ? student.name.toLowerCase().includes(searchQuery.toLowerCase()) : true)
                      .map(student => (
                        <div key={student.id} className="grid grid-cols-5 p-3 text-xs md:text-sm items-center">
                          <div className="font-medium">{student.name}</div>
                          <div>{student.age}</div>
                          <div>{student.sport}</div>
                          <div>{student.attendance}</div>
                          <div className="text-right">
                            <Badge variant={student.nextClass === 'Today' ? 'default' : 'outline'}>
                              {student.nextClass}
                            </Badge>
                          </div>
                        </div>
                      ))}
                  </div>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* Reports Tab */}
          <TabsContent value="reports" className="space-y-4">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <Card>
                <CardHeader>
                  <CardTitle>Recent Activity Reports</CardTitle>
                  <CardDescription>Recent training reports submitted</CardDescription>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-gray-500 mb-4">You haven't submitted any reports recently.</p>
                  <Button>Create New Report</Button>
                </CardContent>
              </Card>
              
              <Card>
                <CardHeader>
                  <CardTitle>Performance Tracking</CardTitle>
                  <CardDescription>Student progress reports</CardDescription>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-gray-500 mb-4">Track and document student progress over time.</p>
                  <Button variant="outline">View Progress Reports</Button>
                </CardContent>
              </Card>
            </div>
          </TabsContent>
        </Tabs>
      </div>
    </DashboardLayout>
  );
};

export default CoachDashboard;
