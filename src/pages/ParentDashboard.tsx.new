import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Calendar } from '@/components/ui/calendar';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Calendar as CalendarIcon, Users, Clock, CheckCircle, Activity, CreditCard, MessageSquare } from 'lucide-react';
import ChildAttendanceCard from '@/components/ChildAttendanceCard';
import CoachInfoCard from '@/components/CoachInfoCard';
import PaymentCard from '@/components/PaymentCard';
import DashboardLayout from '@/components/layouts/DashboardLayout';

// Sample data - in real app this would come from API
const childData = {
  name: "Alex Johnson",
  rollNumber: "S012",
  attendanceRecords: [
    {
      id: '1',
      date: '2024-06-10',
      status: 'present' as const,
      sport: 'Football',
      coach: 'Mike Wilson'
    },
    {
      id: '2',
      date: '2024-06-09',
      status: 'present' as const,
      sport: 'Swimming',
      coach: 'Sarah Davis'
    },
    {
      id: '3',
      date: '2024-06-08',
      status: 'late' as const,
      sport: 'Basketball',
      coach: 'John Smith'
    },
    {
      id: '4',
      date: '2024-06-07',
      status: 'absent' as const,
      sport: 'Tennis',
      coach: 'Emma Brown'
    },
    {
      id: '5',
      date: '2024-06-06',
      status: 'present' as const,
      sport: 'Football',
      coach: 'Mike Wilson'
    }
  ]
};

const coachInfo = {
  id: '1',
  name: 'Coach Mike Wilson',
  sports: ['Football', 'Athletics', 'Soccer'],
  experience: '8 years',
  phone: '+1-234-567-8900',
  email: 'mike.wilson@sportsschool.edu',
  schedule: 'Monday to Friday, 3:00 PM - 6:00 PM'
};

// Mock upcoming classes
const upcomingClasses = [
  { id: 1, title: 'Football Training', time: '3:30 PM - 5:00 PM', coach: 'Mike Wilson', location: 'Field A', daysTill: 0 },
  { id: 2, title: 'Swimming Session', time: '4:15 PM - 5:30 PM', coach: 'Sarah Davis', location: 'Pool 2', daysTill: 1 },
  { id: 3, title: 'Basketball Practice', time: '6:00 PM - 7:30 PM', coach: 'John Smith', location: 'Court B', daysTill: 2 }
];

// Mock payment history
const paymentHistory = [
  { id: 1, date: '2024-06-01', amount: '$150', description: 'June Football Fees', status: 'paid' },
  { id: 2, date: '2024-05-15', amount: '$120', description: 'Swimming Session Package', status: 'paid' },
  { id: 3, date: '2024-05-01', amount: '$150', description: 'May Football Fees', status: 'paid' },
  { id: 4, date: '2024-04-15', amount: '$80', description: 'Basketball Training', status: 'paid' }
];

const ParentDashboard = () => {
  const [selectedDate, setSelectedDate] = useState<Date | undefined>(new Date());
  
  // Calculate some stats
  const attendanceRate = Math.round(
    (childData.attendanceRecords.filter(r => r.status === 'present').length / childData.attendanceRecords.length) * 100
  );
  
  const uniqueSports = new Set(childData.attendanceRecords.map(r => r.sport));
  const activeSports = uniqueSports.size;

  return (
    <DashboardLayout
      title="Parent Dashboard"
      userType="parent"
      currentPath="/parent/dashboard"
    >
      <div className="space-y-6">
        {/* Top Cards */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <Card className="overflow-hidden border-none shadow-md hover:shadow-lg transition-all">
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm font-medium text-gray-500">Attendance Rate</p>
                  <div className="text-2xl font-bold">{attendanceRate}%</div>
                  <div className="flex items-center text-xs text-green-600 mt-1">
                    <CheckCircle className="h-3 w-3 mr-1" />
                    Good performance
                  </div>
                </div>
                <div className="rounded-full p-3 bg-green-100">
                  <Users className="h-6 w-6 text-green-600" />
                </div>
              </div>
            </CardContent>
          </Card>

          <Card className="overflow-hidden border-none shadow-md hover:shadow-lg transition-all">
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm font-medium text-gray-500">Active Sports</p>
                  <div className="text-2xl font-bold">{activeSports}</div>
                  <div className="flex items-center text-xs text-green-600 mt-1">
                    <Activity className="h-3 w-3 mr-1" />
                    Well-rounded curriculum
                  </div>
                </div>
                <div className="rounded-full p-3 bg-blue-100">
                  <Activity className="h-6 w-6 text-blue-600" />
                </div>
              </div>
            </CardContent>
          </Card>

          <Card className="overflow-hidden border-none shadow-md hover:shadow-lg transition-all">
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm font-medium text-gray-500">Next Class</p>
                  <div className="text-2xl font-bold">Today</div>
                  <div className="flex items-center text-xs text-green-600 mt-1">
                    <Clock className="h-3 w-3 mr-1" />
                    {upcomingClasses[0].time}
                  </div>
                </div>
                <div className="rounded-full p-3 bg-amber-100">
                  <CalendarIcon className="h-6 w-6 text-amber-600" />
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Dashboard Tabs */}
        <Tabs defaultValue="overview" className="space-y-4">
          <TabsList className="grid grid-cols-1 sm:grid-cols-4 max-w-xl">
            <TabsTrigger value="overview">Overview</TabsTrigger>
            <TabsTrigger value="attendance">Attendance</TabsTrigger>
            <TabsTrigger value="payments">Payments</TabsTrigger>
            <TabsTrigger value="coaches">Coaches</TabsTrigger>
          </TabsList>

          {/* Overview Tab */}
          <TabsContent value="overview" className="space-y-4">
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div className="col-span-2">
                <Card>
                  <CardHeader>
                    <CardTitle>Upcoming Classes</CardTitle>
                    <CardDescription>{childData.name}'s schedule</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      {upcomingClasses.map(cls => (
                        <div key={cls.id} className="flex justify-between items-center p-3 border rounded-lg hover:bg-gray-50">
                          <div>
                            <h4 className="font-semibold">{cls.title}</h4>
                            <div className="flex items-center gap-2 mt-1 text-sm text-gray-500">
                              <Clock className="h-3 w-3" />
                              {cls.time}
                            </div>
                            <div className="flex items-center gap-2 mt-1 text-xs text-gray-500">
                              <Users className="h-3 w-3" />
                              {cls.coach}
                            </div>
                          </div>
                          <Badge variant={cls.daysTill === 0 ? "default" : "outline"}>
                            {cls.daysTill === 0 ? "Today" : cls.daysTill === 1 ? "Tomorrow" : `In ${cls.daysTill} days`}
                          </Badge>
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>
              </div>

              <Card>
                <CardHeader>
                  <CardTitle>Calendar</CardTitle>
                  <CardDescription>View scheduled classes</CardDescription>
                </CardHeader>
                <CardContent className="pt-0">
                  <Calendar
                    mode="single"
                    selected={selectedDate}
                    onSelect={setSelectedDate}
                    className="border rounded-md p-3"
                  />
                </CardContent>
              </Card>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <Card>
                <CardHeader>
                  <CardTitle>Payment Status</CardTitle>
                  <CardDescription>Current payment information</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="flex items-center justify-between p-4 bg-gray-50 rounded-lg mb-4">
                    <div>
                      <h3 className="font-semibold">June Football Fees</h3>
                      <p className="text-sm text-gray-500">Due on June 15, 2024</p>
                    </div>
                    <div className="text-right">
                      <p className="font-bold">$150.00</p>
                      <Badge variant="destructive">Pending</Badge>
                    </div>
                  </div>
                  
                  <Button className="w-full">
                    <CreditCard className="h-4 w-4 mr-2" />
                    Pay Now
                  </Button>
                </CardContent>
              </Card>
              
              <Card>
                <CardHeader>
                  <CardTitle>Quick Contact</CardTitle>
                  <CardDescription>Reach out to coaches</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="flex items-center gap-3 p-3 border rounded-lg mb-4">
                    <div className="rounded-full p-2 bg-blue-100">
                      <Users className="h-4 w-4 text-blue-600" />
                    </div>
                    <div>
                      <p className="font-medium">{coachInfo.name}</p>
                      <p className="text-xs text-gray-500">{coachInfo.phone}</p>
                    </div>
                  </div>
                  
                  <div className="flex gap-2">
                    <Button className="flex-1" variant="outline">
                      <MessageSquare className="h-4 w-4 mr-2" />
                      Message
                    </Button>
                    <Button className="flex-1">
                      Call Coach
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>

          {/* Attendance Tab */}
          <TabsContent value="attendance" className="space-y-4">
            <ChildAttendanceCard 
              childName={childData.name}
              rollNumber={childData.rollNumber}
              attendanceRecords={childData.attendanceRecords}
            />
            
            <Card>
              <CardHeader>
                <CardTitle>Attendance Analysis</CardTitle>
                <CardDescription>Performance metrics and trends</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-2 sm:grid-cols-4 gap-4">
                  <div className="text-center p-4 bg-green-50 rounded-lg">
                    <div className="text-2xl font-bold text-green-600">{childData.attendanceRecords.filter(r => r.status === 'present').length}</div>
                    <div className="text-sm text-gray-500">Present</div>
                  </div>
                  <div className="text-center p-4 bg-yellow-50 rounded-lg">
                    <div className="text-2xl font-bold text-yellow-600">{childData.attendanceRecords.filter(r => r.status === 'late').length}</div>
                    <div className="text-sm text-gray-500">Late</div>
                  </div>
                  <div className="text-center p-4 bg-red-50 rounded-lg">
                    <div className="text-2xl font-bold text-red-600">{childData.attendanceRecords.filter(r => r.status === 'absent').length}</div>
                    <div className="text-sm text-gray-500">Absent</div>
                  </div>
                  <div className="text-center p-4 bg-blue-50 rounded-lg">
                    <div className="text-2xl font-bold text-blue-600">{attendanceRate}%</div>
                    <div className="text-sm text-gray-500">Overall</div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </TabsContent>
          
          {/* Payments Tab */}
          <TabsContent value="payments" className="space-y-4">
            <PaymentCard 
              childName={childData.name}
              pendingFees={150}
            />
            
            <Card>
              <CardHeader>
                <CardTitle>Payment History</CardTitle>
                <CardDescription>Recent payment records</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="rounded-md border">
                  <div className="grid grid-cols-4 font-medium p-3 bg-muted text-xs md:text-sm">
                    <div>Date</div>
                    <div>Description</div>
                    <div>Amount</div>
                    <div className="text-right">Status</div>
                  </div>
                  <div className="divide-y">
                    {paymentHistory.map(payment => (
                      <div key={payment.id} className="grid grid-cols-4 p-3 text-xs md:text-sm items-center">
                        <div>{payment.date}</div>
                        <div className="font-medium">{payment.description}</div>
                        <div>{payment.amount}</div>
                        <div className="text-right">
                          <Badge variant={payment.status === 'paid' ? 'default' : 'destructive'}>
                            {payment.status === 'paid' ? 'Paid' : 'Pending'}
                          </Badge>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </CardContent>
            </Card>
          </TabsContent>
          
          {/* Coaches Tab */}
          <TabsContent value="coaches" className="space-y-4">
            <CoachInfoCard 
              coachInfo={coachInfo}
              childName={childData.name}
            />
            
            <Card>
              <CardHeader>
                <CardTitle>Coach Schedule</CardTitle>
                <CardDescription>Class schedule and availability</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {coachInfo.sports.map((sport, index) => (
                    <div key={index} className="p-3 border rounded-lg">
                      <h4 className="font-medium">{sport}</h4>
                      <p className="text-sm text-gray-500 mt-1">{coachInfo.schedule}</p>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </DashboardLayout>
  );
};

export default ParentDashboard;
